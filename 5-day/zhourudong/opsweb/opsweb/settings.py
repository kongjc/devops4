# coding:utf8
"""
Django settings for opsweb project.

Generated by 'django-admin startproject' using Django 1.8.17.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!26-@+@5)15&w-@231t5ub1ve$0qj$xw0b1kl@$3og^48ww91w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dashboard',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'opsweb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'opsweb.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'reboot',
        'USER': 'zrd',
        'PASSWORD': '123456',
        'HOST': '127.0.0.1',
        'PORT': 3306,
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

LOGIN_URL = '/login/' # 跳转的url
# STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)


# 页面跳转模板
TEMPLATE_JUMP  = "public/jump.html"

# 无权限显示页面 跳转
PERMISSION_NONE_URL = '/permission/none/'


LOGGING = {
    'version': 1,
    # 有多个handlers
    'loggers': {
        'opsweb': {
            'level': 'DEBUG',
            'handlers': ['console_handle', 'opsweb_file_handler'],   # 可以输出多个目标
        },
        "django":{  # django 内置logger
             "level"  : "DEBUG",
            'handlers': [ 'django_handler'],
        },
        "django.request":{  # django 内置logger  请求日志 400 500类的错
             "level"  : "DEBUG",
            'handlers': [ 'django_request_handler'],
        },
    },
    'handlers': {
        'console_handle': {
            'class': 'logging.StreamHandler',  # 打印到屏幕
            'formatter':'opsweb',
        },
        'opsweb_file_handler':{
            'class': 'logging.FileHandler', # 记录日志到文件中
            'filename': os.path.join(BASE_DIR, "logs", 'opsweb.log'), # 相对路径 目录 文件名  （目录必须存在否则报错）
            'formatter':'opsweb',
        },
        'django_handler':{
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, "logs", 'django.log'),
            'formatter':'opsweb',
        },
        'django_request_handler':{
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, "logs", 'django_request.log'),
            'formatter':'opsweb',
        },
    },
    'formatters': {
        'opsweb': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
}
